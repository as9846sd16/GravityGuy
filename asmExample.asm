TITLE Example of ASM                (asmExample.ASM)
INCLUDE Irvine32.inc

main          EQU start@0

; function prototype
; game function
check_Box PROTO, 
	num : DWORD,
	direction : BYTE	;0-up, 1-down, 2-left, 3-right
;ax = 1/0
check_Hero PROTO,
	num :DWORD,
	direction : BYTE	;0-up, 1-down, 2-left, 3-right
;ax = 1/0, ebx = num
HeroMove PROTO,
	num : DWORD,
direction : BYTE 	;0-up, 1-down, 2-left, 3-right
; GUI function
HomePage PROTO
SettingPage PROTO
ColorPage PROTO,
top:WORD, left:WORD, wid:WORD
OverPage PROTO
PaintRect PROTO,
attribute:PTR WORD,
x:WORD, y:WORD,
wid:WORD, height:WORD
ListPlayer PROTO,
left:WORD, top:WORD, gap:WORD,
item:PTR BYTE, len:DWORD
PaintBlock PROTO,
charPT:DWORD
PaintEdge PROTO,
leftChar:BYTE, rightChar:BYTE,
line:WORD, left:WORD, wid:WORD
ChooseColor PROTO,
point:DWORD
PaintFireWork PROTO,
cPt:DWORD
CleanPage PROTO

; define structure
heroinfo STRUCT
	pos		COORD	<>	;x,y are words
	isStand	BYTE		0	;0-stand, 1-fly
	movable 	BYTE		1
	isAlive 		BYTE 		0
	direction 	BYTE 		?	;0-up, 1-down
	order 		BYTE		?	;map position order (0-3)
	color 		DWORD 	0	;1
	key		WORD 	?	;1E61h	;存ascii code
heroinfo ENDS

mapinfo STRUCT			;p[x,y] = (px + x)* mapSize.y + y 
map		DWORD	0				;地圖offset
	mapSize	COORD	<?, ?>				;大地圖size
	px		WORD		0				;小地圖開始x座標
mapinfo ENDS	

.data
; window data
consoleHandle	DWORD				?
cellsWritten		DWORD				?
cursorInfo		CONSOLE_CURSOR_INFO		<>
xyBound		COORD				<84,26>
xyPos			COORD				<83,25>
xyRec			SMALL_RECT			<0, 0, 83, 25>
; string message
titleStr			BYTE		"G r a v i t y    G u y", 0
char			BYTE		' '
startStr			BYTE		"Start"
aboutStr		BYTE		"About"
setStr			BYTE		"Setting"
closeStr		BYTE		"Close"
setTitStr		BYTE		"S e t    P l a y e r s '    K e y"
colorTitStr		BYTE		"S e t    P l a y e r s '    C o l o r"
playStr		BYTE		"Player  's"
keyStr			BYTE		"key :"
colorStr		BYTE		"color :"
backStr		BYTE		"Back"
runStr			BYTE		"R U N !"
duceStr		BYTE		"D u c e ~"
ggStr			BYTE		"Game Over"
scoreStr	 	BYTE		"Your distance is :"
winStr			BYTE		"Win"
retryStr		BYTE		"Try Again"
homeStr		BYTE		"Home Page"

tmpWord		WORD		0
tmpDWord		DWORD	0
; map string
blockStr	BYTE		4 Dup(0b2h)
blankStr	BYTE		84 Dup(' ')
upStr		BYTE		" () "
		BYTE		0dah, "==", 0d9h
		BYTE		"_|-", 0bfh
downStr	BYTE		" () "
		BYTE		0c0h, "==", 0bfh
		BYTE		'-', 0bfh, "_|"
flyStr		BYTE		"\_/_/\"
		BYTE		"/ \ \/"
firewordSTr	BYTE		"\  |  /"
		BYTE		"  \|/  "
		BYTE		"---*---"
		BYTE		"  /|\  "
		BYTE		"/  |  \"

; Array of attribute
attributeBW	WORD		84 Dup (Blue+White*16)
attributeBY	WORD		84 Dup (Blue+Yellow*16)
attributeYR	WORD		30 Dup (Yellow+LightRed*16)
attributeKG	WORD		30 Dup (Black+LightGreen*16)
attributeWB	WORD		30 Dup (White+LightBlue*16)
attributeWK	WORD		84 Dup (White+Black*16)
attributeR	WORD 7 Dup(LightRed)
attributeG	WORD 7 Dup(LightGreen)
attributeB	WORD 7 Dup(LightBlue)
attributeY	WORD 7 Dup(Yellow)

; gui data
keys		WORD		1071h, 2c7ah, 316eh, 1970h; q/z/n/p
isColors	WORD		4 Dup (0)
isChoose	WORD		4 Dup (1)
colors		DWORD	offset attributeR, offset attributeG,
offset attributeB, offset attributeY
colorsPtr	DWORD	offset attributeYR, offset attributeKG,
offset attributeWB, offset attributeBY

; Game data
;hero	Heroinfo	< <11,12>,13,14,15,16> ,< <21,22>,23,24,25,26>  照順序    
;取hero[1].isAlive     ===      hero[ 1* type heroinfo ].isAlive
hero		Heroinfo	4	dup(<>)
;hero		Heroinfo	<<<5,5>,0,1,1,1,1,0>,<<4,8>,0,1,1,1,1,1>,<<0,0>,1,1,1,1,1,2>
heroNum	BYTE		4
playerNum	BYTE		0
init_dir		BYTE		0, 1, 0, 1
init_pos1	COORD	<23,5>, <23,5>, <23, 21>, <23,21>
init_pos2	COORD	<21,5>, <21,5>, <21, 21>, <21,21>
game_map	mapinfo	<>

;mapinfo
; 
mapKind	BYTE		0
map_solo byte	0,0,0,0,0,0,1,0,0,1,1,1,1
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,1,1,1,0,0,1,0,0,1,0,0,0
byte	1,0,0,0,1,0,1,0,0,1,0,0,0
byte	1,0,0,0,1,0,1,0,0,1,0,0,0
byte	1,0,0,1,1,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,1,1,1,0,0,1,0,0,1,0,0,0
byte	1,0,0,0,1,0,1,0,0,1,0,0,0
byte	1,0,0,0,1,0,1,0,0,1,0,0,0
byte	0,1,1,1,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	1,0,0,0,1,0,1,0,0,1,0,0,0
byte	0,1,0,1,0,0,1,0,0,1,0,0,0
byte	0,0,1,0,0,0,1,0,0,0,0,0,0
byte	1,0,0,0,1,0,1,0,0,0,0,0,0
byte	0,1,0,1,0,0,1,0,0,0,0,0,0
byte	0,0,1,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,1,1,1
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,1,1,1,1,1,1,1,1
byte	0,0,1,0,0,1,0,0,0,0,0,0,0
byte	0,0,1,0,0,1,0,0,0,0,0,0,0
byte	0,0,1,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,1,1,1,1,1,1,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,1,1,1,1,1,1
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,1,1,1,1,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,1,1,1,1
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,1,0
byte	0,0,1,0,0,0,0,0,0,0,0,1,0
byte	0,0,1,0,0,0,0,0,0,0,0,1,0
byte	0,0,1,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,1
byte	0,0,0,0,0,0,0,0,0,0,0,1,1
byte	0,0,0,0,0,1,1,0,0,0,0,1,0
byte	0,0,0,0,1,0,1,0,0,0,0,1,0
byte	0,0,0,1,0,1,1,0,0,0,0,1,0
byte	0,0,0,0,1,0,1,0,0,0,0,1,0
byte	0,0,0,0,0,1,1,0,0,0,0,1,0
byte	0,0,0,0,1,1,0,0,0,0,1,1,0
byte	0,0,0,1,0,1,0,0,0,0,1,0,0
byte	0,0,1,0,0,1,0,0,0,0,1,0,1
byte	0,0,0,1,0,1,0,0,0,0,1,0,0
byte	0,0,0,0,1,1,0,0,0,0,1,1,0
byte	0,0,0,1,1,0,0,0,0,1,1,0,0
byte	0,0,1,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,1,1,0,0,0,0,1,0,0,0
byte	0,0,1,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,1,1,0,0,0,0,1,0,0,1
byte	0,0,0,1,1,0,0,0,0,1,0,1,0
byte	0,0,1,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,1,1,0,0,0,0,1,0,0,0
byte	0,0,1,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,1,1,0,0,0,0,1,0,0,1
byte	0,0,0,0,1,1,0,0,0,0,1,1,0
byte	0,0,0,0,0,1,0,0,0,0,1,0,0
byte	0,0,0,1,0,1,0,0,0,0,1,0,1
byte	0,0,0,0,0,1,0,0,0,0,1,0,0
byte	0,0,0,0,1,1,0,0,0,0,1,1,0
byte	0,0,0,0,0,1,1,0,0,0,0,1,0
byte	0,0,0,0,1,0,1,0,0,0,0,1,0
byte	0,0,0,0,0,0,1,0,0,0,0,1,0
byte	0,0,1,0,0,0,1,0,0,0,0,1,0
byte	0,0,0,0,0,0,1,0,0,0,0,1,1
byte	1,0,0,1,0,0,1,0,0,0,0,1,0
byte	0,0,0,0,0,0,1,0,0,0,0,1,0
byte	0,0,0,0,0,0,1,0,0,0,0,1,0
byte	0,0,0,0,1,1,1,0,0,0,0,1,0
byte	0,0,0,0,0,1,0,0,0,0,1,1,0
byte	1,0,1,0,0,1,0,0,0,0,1,0,1
byte	0,0,0,0,0,1,0,0,0,0,1,0,0
byte	0,0,0,0,1,1,0,0,0,0,1,1,0
byte	1,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,1,0,1,0,0,0,0,1,0,1,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,1,1,1,1,0,0,0,0,0,0,1,1
byte	0,0,0,0,1,0,0,0,0,0,0,1,0
byte	0,0,0,0,1,0,0,0,0,0,0,1,0
byte	0,0,0,0,1,0,0,0,0,0,0,1,0
byte	0,0,0,0,1,0,0,0,0,0,0,1,0
byte	0,0,0,0,1,0,0,0,0,0,0,1,0
byte	0,0,0,0,1,0,0,0,0,0,0,1,0
byte	0,0,0,0,1,1,1,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	1,1,1,1,1,0,0,1,0,0,0,1,0
byte	1,0,1,0,0,0,0,1,0,0,0,1,0
byte	1,0,1,0,0,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	1,1,1,1,0,0,0,1,0,0,0,1,0
byte	0,0,0,0,1,0,0,1,0,0,0,1,0
byte	0,0,0,0,1,0,0,1,0,0,0,1,0
byte	1,1,1,1,0,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,1,1,0
byte	0,1,1,1,0,0,0,1,0,0,0,1,0
byte	1,0,0,0,1,0,0,1,0,0,0,1,0
byte	1,0,0,0,1,0,0,1,0,0,0,1,0
byte	1,0,0,0,1,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	1,1,1,1,1,0,0,1,0,0,0,1,0
byte	0,0,1,0,0,0,0,1,1,0,0,1,0
byte	0,1,0,1,0,0,0,1,0,0,0,1,0
byte	1,0,0,0,1,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	1,0,0,0,1,0,0,1,0,0,0,1,0
byte	1,1,1,1,1,0,0,1,0,0,0,1,0
byte	1,1,1,1,1,0,0,1,0,0,0,1,0
byte	1,0,0,0,1,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,1,1,0
byte	1,1,1,1,1,0,0,1,0,0,0,1,0
byte	1,1,0,0,0,0,0,1,0,0,0,1,0
byte	0,0,1,1,0,0,0,1,0,0,0,1,0
byte	1,1,1,1,1,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	0,1,1,1,0,0,0,1,0,0,0,1,0
byte	1,0,0,0,1,0,0,1,0,0,0,1,0
byte	1,0,0,0,1,0,0,1,0,0,0,1,0
byte	1,0,0,1,1,0,0,1,1,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	1,1,1,1,1,0,0,1,0,0,0,1,0
byte	0,1,0,0,0,0,0,1,0,0,0,1,0
byte	0,0,1,0,0,0,0,1,0,0,0,1,0
byte	0,1,0,0,0,0,0,1,0,0,0,1,0
byte	1,1,1,1,1,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	0,0,0,1,1,0,0,1,0,0,0,1,0
byte	0,1,1,1,0,0,0,1,0,0,0,1,0
byte	1,0,0,1,0,0,0,1,0,0,0,1,0
byte	0,1,1,1,0,0,0,1,0,0,0,1,0
byte	0,0,0,1,1,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	1,1,1,1,1,0,0,1,0,0,0,1,1
byte	1,0,0,1,0,0,0,1,0,0,0,0,0
byte	1,0,0,1,0,0,0,1,0,0,0,0,0
byte	0,1,1,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	1,1,1,1,1,1,1,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,1
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,1,1,1,0,0,0,0,0
byte	0,1,0,0,0,0,0,1,0,0,0,0,0
byte	0,1,0,0,0,0,0,1,0,0,0,0,0
byte	0,1,0,0,0,0,0,1,0,0,0,0,0
byte	0,1,0,0,0,0,0,1,0,0,0,0,0
byte	0,1,0,0,1,0,0,1,0,0,0,0,0
byte	0,1,0,0,1,0,0,1,0,0,0,0,0
byte	0,1,0,0,1,0,0,1,0,0,0,0,0
byte	0,1,0,0,1,0,0,1,0,0,0,0,0
byte	0,1,0,0,1,0,0,1,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,1,0,0,0,0
byte	1,0,0,0,0,0,0,0,1,0,0,0,0
byte	1,0,0,0,0,0,0,0,1,0,0,0,0
byte	1,0,0,0,0,0,0,0,1,0,0,0,0
byte	1,0,0,0,0,0,0,0,1,0,0,0,0
byte	1,0,0,0,1,0,0,0,1,0,0,0,0
byte	1,0,0,0,1,0,0,0,1,0,0,0,0
byte	1,0,0,0,1,0,0,0,1,0,0,0,0
byte	1,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,1,0,0,1,0,0,1,0,0,0,0,0
byte	0,1,0,0,1,0,0,1,0,0,0,0,0
byte	0,1,0,0,0,0,0,1,0,0,0,0,0
byte	0,1,0,0,0,0,0,1,0,0,0,0,0
byte	0,1,0,0,0,0,0,1,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,1,0,0,0,0
byte	1,0,0,0,0,0,0,0,1,0,0,0,0
byte	1,0,0,0,0,0,0,0,1,0,0,0,0
byte	1,0,0,0,0,0,0,0,1,0,0,0,0
byte	1,0,0,0,0,0,0,0,1,0,0,0,0
byte	1,0,0,0,0,0,0,0,1,0,0,0,0
byte	1,0,0,0,0,0,0,0,1,0,0,0,0
byte	1,0,0,0,0,0,0,0,1,0,0,0,0
byte	1,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,1,0,0,0,0,0,1,0,0,0,0,0
byte	0,1,0,0,0,0,0,1,0,0,0,0,0
byte	0,1,0,0,0,0,0,1,0,0,0,0,0
byte	0,1,0,0,0,0,0,1,0,0,0,0,0
byte	0,1,0,0,0,0,0,1,0,0,0,0,0
byte	0,1,0,0,0,0,0,1,0,0,0,0,0
byte	0,1,0,0,1,0,0,1,0,0,0,0,0
byte	0,1,0,0,1,0,0,1,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,1,0,0,0,0
byte	0,1,0,0,0,1,0,0,1,0,0,0,0
byte	0,1,0,0,0,1,0,0,1,0,0,0,0
byte	0,1,0,0,0,1,0,0,1,0,0,0,0
byte	0,1,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,1,0,0,1,0,0,0,1,0,0,0
byte	0,0,1,0,0,1,0,0,0,1,0,0,0
byte	0,0,1,0,0,1,0,0,0,1,0,0,0
byte	0,1,0,0,0,1,0,0,0,1,0,0,0
byte	0,1,0,0,0,1,0,0,1,0,0,0,0
byte	0,1,0,0,1,0,0,0,1,0,0,0,0
byte	0,1,0,0,1,0,0,0,1,0,0,0,0
byte	0,1,0,0,1,0,0,0,1,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,1,0,0,0
byte	0,1,0,0,1,0,0,0,0,1,0,0,0
byte	0,1,0,0,1,0,0,0,0,1,0,0,0
byte	0,1,0,0,0,1,0,0,0,1,0,0,0
byte	0,1,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,1,1,0,0,0,0,0
byte	0,0,0,0,0,1,0,1,0,0,0,0,0
byte	0,0,0,0,1,1,1,1,0,0,0,0,0
byte	0,0,0,0,0,1,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,1,1,0,0,0,0,0
byte	0,0,0,1,0,0,0,1,0,0,0,0,0
byte	0,0,1,1,1,1,1,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,1,1,1
byte	0,0,0,0,0,1,0,0,0,0,1,0,0
byte	0,0,0,0,0,1,0,0,0,0,1,0,0
byte	0,0,0,0,0,1,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,1,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,1,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,1,1,1,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,1,1,1,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,1,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,1,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,1,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,1,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,1,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,1,1,0,0,0,0,0,0,0,0,0
byte	0,0,1,1,0,0,0,0,0,0,0,0,0
byte	0,1,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,1,1,1,1,1,1,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,1,1,1,1,1,1,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,1,1,1,1,1,1,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,1,1,1,1,1,1,1,1,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,1,1,1,1,1,1,1,1,1,1
byte	1,0,0,1,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,1,1,1,1,1,1,1,1
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,1,1,1,1,1,1,1
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,1,1,1,1,1,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,1,1,1,1,1
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,1,1,1,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,1,1,1
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,1,1
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,1
byte	1,1,1,1,1,1,1,1,1,0,0,1,0
byte	0,0,0,0,0,0,0,0,1,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,1,1,1,1,1,1,1,1
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,1,1,1,1,1,1,1
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,1,1,1,1,1,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,1,1,1,1,1
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,1,1,1,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,1,1,1
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,1,1,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,1,1,1
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,1,1,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,1,1,1
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,1,1,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,1,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,1
byte	0,0,0,1,0,0,0,1,0,0,0,0,1
byte	0,0,0,0,0,0,0,1,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,1,1,1,1,1,1
byte	0,1,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,1,1,1,0,0,0,0,0,1,1,1,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,1,1,1,1,1,1,1,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,1,1,1,0,0,0,0,0,1,1,1,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,1,0,0,0,1,0,0
byte	0,0,1,0,0,0,1,0,0,0,1,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,1,1,1,1,1,1,1,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,1,1,1,1,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,1,1,1,1,0,0,0,1,1,1,1,1
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,1,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,1,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,1,1,1,1
byte	0,0,1,0,1,0,0,0,1,0,0,1,0
byte	0,0,0,1,1,0,0,0,1,0,1,0,0
byte	0,0,0,0,0,0,0,0,1,1,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,1,1,1,1
byte	0,0,0,0,1,0,0,1,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,1,0,0,1,1,1,1,1
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,1,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,1,1,1,1
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,1,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,1,1,1,1
byte	0,0,0,0,1,0,0,1,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,1,0,0,1,1,1,1,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,1,0,0,0,0,0
byte	1,0,0,0,0,0,0,1,0,0,0,0,0
byte	1,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	1,1,0,0,1,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	1,0,0,1,1,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	1,1,0,0,1,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	1,0,0,1,1,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	1,1,0,0,1,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,1,0,0,1
byte	0,0,0,0,0,0,0,0,0,1,0,0,1
byte	0,0,0,0,0,0,0,0,0,1,0,0,1
byte	1,1,1,1,1,1,1,1,1,1,0,0,1
byte	0,0,0,0,0,0,0,0,0,1,0,0,1
byte	0,0,0,0,0,0,0,0,0,1,0,0,1
byte	0,0,0,0,0,0,0,0,0,1,0,0,1
byte	0,0,0,0,0,0,0,0,0,1,0,0,1
byte	0,0,0,0,0,0,0,0,0,1,0,0,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,1
byte	0,0,0,0,0,0,0,1,1,0,0,0,1
byte	0,0,0,0,0,0,0,1,0,0,0,0,1
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,1,0,0,0,0,1,0
byte	0,0,0,0,0,0,1,0,0,0,1,1,0
byte	0,0,0,0,0,0,1,0,0,0,1,0,0
byte	0,0,0,0,0,0,1,0,0,0,1,0,0
byte	0,0,0,0,0,1,0,0,0,0,1,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,0,1,1,0,0,0,1,0,0
byte	0,0,0,0,0,0,1,0,0,0,1,0,0
byte	0,0,0,0,0,0,1,0,0,0,1,0,0
byte	0,0,0,0,0,0,1,0,0,0,1,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,1,0,0,0,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,1
byte	0,0,0,0,0,0,0,1,1,0,0,0,1
byte	0,0,0,0,0,0,0,1,0,0,0,0,1
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,1,1,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,1,1,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,1,1,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,1,1,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,1,1,0,0,0,0,0,1,1,0
byte	0,0,0,0,1,1,1,0,0,0,1,0,1
byte	0,0,0,1,1,0,0,0,0,0,1,0,0
byte	0,0,0,0,1,0,0,0,1,1,1,0,0
byte	0,0,0,1,1,0,0,0,0,0,1,1,0
byte	0,0,0,0,1,1,1,0,0,0,1,0,1
byte	0,0,0,1,1,0,0,0,0,0,1,0,0
byte	0,0,0,0,1,0,0,0,1,1,1,0,0
byte	0,0,0,1,1,0,0,0,0,0,1,1,0
byte	0,0,0,0,1,1,1,0,0,0,1,0,1
byte	0,0,0,0,0,0,0,1,0,0,1,0,0
byte	0,0,0,0,0,0,0,1,0,0,1,0,0
byte	0,0,0,0,0,0,0,1,0,0,1,0,0
byte	0,0,0,0,0,0,0,1,0,0,1,0,0
byte	0,0,0,0,0,0,0,1,0,0,1,0,0
byte	0,0,0,0,0,0,0,1,0,0,1,0,0
byte	0,0,0,0,0,0,0,1,0,0,1,0,0
byte	0,0,0,0,0,0,1,0,0,0,1,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,1,0,0,0,1,0,0,0,0,0
byte	0,0,1,0,0,0,1,0,0,0,0,0,0
byte	0,1,0,0,0,1,0,0,0,0,0,0,0
byte	1,0,0,0,1,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,1
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,1,0,0,0,1,0,0
byte	0,0,0,0,0,0,1,0,0,0,1,0,0
byte	0,0,0,0,0,0,1,0,0,0,1,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,1,1,0,0,0,1,0,0,0,0
byte	0,0,0,1,0,0,0,1,0,0,0,0,0
byte	0,0,0,1,0,0,0,1,0,0,0,0,0
byte	0,0,0,1,0,0,0,1,0,0,0,0,0
byte	0,0,0,1,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,1,0,0
byte	0,0,0,0,0,0,1,0,0,0,1,0,0
byte	0,0,0,0,0,0,1,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,1,0,0,1
byte	0,0,0,0,0,0,0,0,0,1,0,0,1
byte	0,0,0,0,0,0,0,0,0,1,0,0,1
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,1,0,0,1,0
byte	0,0,0,0,0,0,0,0,1,0,0,1,0
byte	0,0,0,0,0,0,0,0,1,0,0,1,0
byte	0,0,0,0,0,0,0,0,1,0,0,1,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,1,0,0,0,0,0,0
byte	1,1,1,1,0,0,1,1,1,1,1,1,1
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	1,1,0,0,0,0,0,0,0,0,1,0,0
byte	1,1,0,0,0,0,0,0,0,0,1,0,0
byte	1,1,1,1,1,1,0,0,0,1,1,1,0
byte	1,1,0,0,0,0,0,0,0,0,0,1,0
byte	1,1,0,0,0,0,0,0,0,0,0,1,0
byte	1,1,0,0,0,0,0,0,0,0,0,1,0
byte	1,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,1,1,1,1,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,1,1,1,1,1,1,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,1,1,1,1,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,1,0,0,0,0,0,1,0
byte	0,1,0,0,0,1,0,0,0,0,0,1,0
byte	0,1,0,0,0,1,0,0,1,1,1,1,0
byte	0,1,0,0,0,1,0,0,0,0,0,1,0
byte	0,1,0,0,0,1,0,0,0,0,0,1,0
byte	0,1,0,0,0,1,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,1,1,1,1,1,0,0,0,0,1,0
byte	0,0,0,0,1,0,0,0,0,0,0,1,0
byte	0,0,0,0,1,0,0,0,0,0,0,1,0
byte	0,0,0,0,1,0,0,0,1,1,1,1,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,1,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,1,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,1,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,1,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,1,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,1,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,1,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,1,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,1
byte	0,0,0,0,1,0,0,0,0,0,0,0,1
byte	0,0,0,0,1,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,1,1,0,0,0,1,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,1,0,0,0,1,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,1,1,0,0,0,1,1,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,1,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,1,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,1,1,0,0,0,0,0
byte	0,0,0,1,0,0,0,1,0,0,0,0,0
byte	0,0,0,1,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,1,1,0,0,1,0,0,0,0,0
byte	0,0,0,1,0,0,0,1,0,0,0,0,0
byte	0,0,0,1,0,0,1,1,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,1,0,0,0,0,0
byte	0,0,1,1,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	1,1,1,0,0,0,0,1,0,0,0,0,0
byte	1,0,0,0,0,0,0,1,0,0,0,0,0
byte	1,0,0,0,0,0,0,1,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,1,1,1,1,1,1,1,1
byte	1,0,0,0,0,1,0,0,0,0,0,0,0
byte	1,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,1,1,1,1,1,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,1,1,1,1,1
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,1,1,1,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,1,1,1
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,1,1
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,1
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,1,1,1,1,1,1,0,0,1
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,1,1,1,1,1
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,1,1,1,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,1,1,1
byte	0,0,0,0,0,1,1,0,0,1,0,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,1,1,1,1
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,1,1,0,0,0,0,0,0
byte	0,0,0,0,1,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,1,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,1,1
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,1,1,0,0,1,0
byte	0,0,0,0,0,0,0,1,0,0,0,1,1
byte	0,0,0,0,0,0,1,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,1,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	1,1,1,1,1,1,1,1,0,0,1,1,1
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	1,1,0,0,1,0,0,0,1,0,0,1,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,1,0,0,1,0,0,0,1,0,0,1,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,1,1,0,0,0,1,1,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,1,0,0,1,0,0,0,1,0,0,1,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,1,1,1,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,1,1,1,1,1,1,1,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,1,0,0,0,0,0,0,0,0,0,1,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,1,0,0,0,0,0,0,0,0,0,1,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,1,1,1,1,1,1,1,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,1,1,1,1,1,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,1,1,1,1,1,1,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,1,1,1,1,1,1,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,1,1,1,1
byte	0,0,0,0,1,0,0,0,0,0,0,0,1
byte	0,0,0,0,1,0,0,0,0,0,0,0,1
byte	0,0,0,0,1,0,0,0,0,0,0,0,1
byte	0,0,0,0,1,0,0,0,0,0,0,0,1
byte	0,0,0,0,1,0,0,0,1,1,1,1,1
byte	0,1,1,1,1,0,0,0,1,0,0,0,0
byte	0,0,1,0,0,0,0,0,1,0,0,0,0
byte	0,0,1,0,0,0,0,0,1,0,0,0,0
byte	0,0,1,0,0,0,0,0,1,0,0,0,0
byte	0,0,1,0,0,0,0,0,1,0,0,0,0
byte	0,1,1,1,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	1,1,1,1,1,0,0,0,1,1,1,1,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,1,1,1,1,1,0,0,0,1
byte	1,0,0,0,1,1,0,1,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,1,1,0,0,0,1
byte	1,0,0,0,1,1,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,1,0,1,1,0,0,0,1
byte	1,0,0,0,1,1,1,1,1,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,1,1,1,1,1,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,1,1,1,1,1,0,0,0,1
byte	0,1,0,0,1,1,0,1,1,0,0,1,0
byte	0,1,0,0,1,0,0,0,1,0,0,1,0
byte	0,1,0,0,1,0,0,1,1,0,0,1,0
byte	1,0,0,0,0,1,0,1,0,0,0,1,0
byte	1,0,0,0,0,1,0,1,0,0,0,1,0
byte	1,0,0,0,0,1,1,1,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,1,1,1,1,1,1,0,0,1,0
byte	1,0,0,1,0,0,0,0,1,0,0,1,0
byte	1,0,0,1,0,0,0,0,1,0,0,1,0
byte	1,0,0,1,0,0,0,0,1,0,0,1,0
byte	1,0,0,1,0,0,0,0,1,0,0,1,0
byte	1,0,0,1,0,0,0,0,1,0,0,1,0
byte	0,0,0,1,0,0,0,0,1,0,0,0,0
byte	0,0,0,1,0,0,0,0,1,0,0,0,0
byte	0,0,0,1,0,0,0,0,1,0,0,0,0
byte	0,0,0,1,0,0,0,0,1,0,0,0,0
byte	0,0,0,1,0,0,0,0,1,0,0,0,0
byte	0,0,0,1,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,1,1,0,0,0,0,0,0
byte	0,0,0,0,0,1,1,0,0,0,0,0,0
byte	0,0,0,0,0,1,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,1,1,1,1,0,0,0,1,1,1,1,1
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,1,0,0,0,0,0,0,0,1,0,0,0
byte	0,1,0,0,0,0,0,0,0,1,0,0,0
byte	0,1,0,0,0,0,0,0,0,1,0,0,0
byte	0,1,0,0,0,0,0,0,0,1,0,0,0
byte	0,1,0,0,0,0,0,0,0,1,0,0,0
byte	0,1,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	1,1,1,1,1,0,0,0,1,1,1,1,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,1,0,0,1,0,0,0
byte	0,0,0,1,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,1,0,0,1,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,1,0,0,0,1,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,1,1,1,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,1,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,1,1,1,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,1,0,0,0,0,0,1,0,0,0,0
byte	0,0,1,0,0,0,0,0,1,0,0,0,0
byte	1,1,1,0,0,1,1,1,1,0,0,0,0
byte	0,0,1,0,0,1,0,0,0,0,0,0,0
byte	0,0,1,0,0,1,0,0,0,0,0,0,0
byte	0,0,1,0,0,1,0,0,0,0,0,0,0
byte	0,0,1,0,0,1,0,0,0,0,0,0,0
byte	0,0,1,0,0,1,0,0,0,0,0,0,0
byte	0,0,1,0,0,1,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,1,0,0,0,1,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,1,0,0
byte	0,0,0,1,0,0,0,0,0,0,1,0,0
byte	0,0,0,1,0,0,0,0,0,0,1,0,0
byte	0,0,0,1,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,1,0,0,0,0,0,1,0,0
byte	0,0,0,0,1,0,0,0,0,0,1,0,0
byte	0,0,0,0,1,0,0,0,0,0,1,0,0
byte	0,0,0,0,1,0,0,0,0,0,1,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,1,0,0
byte	0,0,0,1,0,0,0,0,0,0,1,0,0
byte	0,0,0,1,0,0,0,0,0,0,1,0,0
byte	0,0,0,1,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,0,1,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	1,1,1,1,1,1,1,1,1,1,1,1,1
map_solo_length = ($-map_solo)/13



map_mult_1	byte	1,1,0,0,1,0,0,0,1,0,0,1,1
byte	1,0,1,0,0,1,0,1,0,0,1,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,0,1,0,1,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,1,0,0,0,0,1,0,0,0,0,1,1
byte	1,1,0,0,0,0,1,0,0,0,0,1,1
byte	1,1,0,0,0,0,1,0,0,0,0,1,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,0,1,0,0,1
byte	1,1,0,0,1,0,0,0,0,1,0,0,1
byte	0,1,0,0,0,1,0,0,0,1,0,0,0
byte	0,1,0,0,0,1,0,0,0,1,0,0,0
byte	0,1,0,0,0,1,0,0,0,1,0,0,0
byte	1,1,0,0,1,0,0,0,0,1,0,0,1
byte	1,0,0,0,1,0,0,0,0,1,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,1,0,0,0,0,0,0,0,0,0,0,1
byte	1,1,1,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,1,1
byte	0,0,0,0,0,0,0,0,0,0,0,1,1
byte	1,1,1,0,0,0,0,0,0,0,0,0,1
byte	1,1,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,1,1
byte	1,0,0,0,0,0,0,0,0,0,1,1,0
byte	1,0,0,0,0,0,0,0,0,0,1,0,0
byte	1,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,1,1,0,0
byte	0,1,0,0,0,0,0,0,0,1,0,0,0
byte	0,1,0,0,0,0,0,0,1,1,0,0,0
byte	0,1,1,0,0,0,0,0,1,0,0,0,0
byte	0,0,1,0,0,0,0,0,1,0,0,0,0
byte	0,0,1,1,0,0,0,0,1,0,0,0,0
byte	0,0,0,1,0,0,0,0,1,1,1,1,1
byte	0,0,0,1,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,1,1,1
byte	0,0,0,0,1,1,0,0,0,0,1,0,0
byte	0,0,0,0,0,1,0,0,0,0,1,1,1
byte	0,0,0,0,0,1,1,0,0,0,0,1,0
byte	0,0,0,0,0,0,1,0,0,0,0,1,1
byte	0,0,0,0,0,0,1,1,0,0,0,0,1
byte	0,0,0,0,0,0,0,1,0,0,0,0,1
byte	0,0,0,0,0,0,0,1,1,0,0,0,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,1
byte	0,0,0,0,0,0,0,0,1,1,0,0,1
byte	0,0,0,0,0,0,0,0,0,1,0,0,1
byte	0,0,0,0,0,0,0,0,0,1,0,0,1
byte	0,0,0,0,0,0,0,0,1,1,0,0,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,1
byte	0,0,0,0,0,0,0,0,1,0,0,0,1
byte	0,0,0,0,0,0,0,1,1,0,0,0,1
byte	0,0,0,0,0,0,0,1,0,0,0,0,1
byte	0,0,0,0,0,0,0,1,0,0,0,0,1
byte	0,0,0,0,0,0,0,1,0,0,0,0,1
byte	0,0,0,0,0,0,1,1,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,1,0,0,0,0,0,0,1
byte	0,0,0,0,0,1,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,1,0
byte	1,0,0,0,0,1,0,0,0,0,0,1,0
byte	1,0,0,0,0,1,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,1
byte	0,0,0,0,1,0,0,0,0,0,0,1,0
byte	0,0,0,0,1,0,0,0,0,0,0,1,0
byte	0,0,0,0,1,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,0,0,1,0,0
byte	0,0,0,0,1,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,1,1
byte	0,0,0,1,0,0,0,0,0,0,1,0,0
byte	0,0,0,1,0,0,0,0,0,0,1,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,1,1,1,1,1,1,1,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,1,1,1,0,0,0,0,0,1,1,1,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,1,0,0,1,0,0,1,0,0,0
byte	0,0,0,1,0,0,1,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,1,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,1,0,0,0,0,0,0,0
byte	1,0,0,0,0,1,0,0,0,0,0,0,0
byte	1,0,0,0,0,1,0,0,0,0,0,0,0
byte	1,0,0,0,0,1,0,0,0,0,0,0,0
byte	1,0,0,0,0,1,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,1,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,1,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,1,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,1,1,0,0,0,0,0,0,0,1,1,1
byte	1,1,1,0,0,0,0,0,0,0,1,1,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,1,1,0,0,0,0,0,0,0,1,1,1
byte	1,1,1,0,0,0,0,0,0,0,1,1,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,1,1,0,0,0,0,0,0,0,1,1,1
byte	1,1,1,0,0,0,0,0,0,0,1,1,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,1,1,1,1,1,1,1,0,0,0
byte	0,0,0,1,1,0,1,0,1,1,0,0,0
byte	0,0,0,1,0,1,0,1,0,1,0,0,0
byte	0,0,0,1,1,1,1,1,1,1,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,1,1,1,1,1,1,1,0,0,0
byte	0,0,0,1,1,0,1,0,1,1,0,0,0
byte	0,0,0,1,0,1,0,1,0,1,0,0,0
byte	0,0,0,1,1,1,1,1,1,1,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,1,0,0,0,0,0,0,0,0,0,1,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,1,1,1,0,0,0,0,1
map_mult_1_length = ($-map_mult_1)/13


map_mult_2	byte	1,1,1,1,1,1,0,1,1,1,1,1,1
byte	1,0,0,1,1,1,0,1,1,1,0,0,1
byte	1,0,0,1,1,1,0,1,1,1,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,1,1,0,0,0,1,1,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,1,0,0,0,0,0,0,0,0,0,1,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,1,1,0,0,0,1,1,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,1,0,0,1,0,0,0,1,0,0,1,1
byte	0,1,0,0,1,0,0,0,1,0,0,1,0
byte	0,1,0,0,1,0,0,0,1,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,1,0,0,0,0,0,0,0,1,1,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,1,0,0,0,0,0,1,1,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,1,0,0,1,0,0,0
byte	0,0,0,1,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,1,0,0,0,0,0,0,0,1,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	11,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,1,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,1,1
byte	1,0,0,0,0,0,0,0,0,0,1,1,0
byte	1,0,0,0,0,0,0,0,0,1,1,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,1,0,0,0,0,0,0,0,0,0,1,0
byte	1,1,1,0,0,0,0,0,0,0,0,1,0
byte	0,1,1,1,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,1,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,1,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,1,1,0
byte	0,1,0,0,0,0,0,0,0,1,1,0,0
byte	0,1,0,0,0,0,0,0,1,1,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,1,0,0,0,0,0,0,1,0,0
byte	0,0,1,1,1,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,1,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,1,0,0,0,0,0,1,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,1,0,0,0,0,0,1,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,1,0,0,0,0,0,1,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,1,0,0,0,0,0,1,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	1,1,1,1,0,0,0,0,0,1,1,1,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,1,1,0,0,0,0,0,1,1,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,1,0,0,0,0,0,0,0,1,1,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,1,0,0,0,0,0,1,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,1,0,0,0,0,0,1,1,0,0
byte	0,0,0,1,1,0,0,0,1,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,1,0,0,0,1,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,1,1,0,0,0,0,0,1,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,1,1,0,0,0,0,0,0,0,1,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	1,1,0,0,0,0,0,0,0,0,0,1,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,1,0,0,0,0,0,0,0,0,0,1,1
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,1,0,0,0,0,0,0,0,1,1,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,1,0,0,0,0,1,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,1,0,0,0,1,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,1,0,1,0,0,0,0,0
byte	0,0,0,0,0,1,0,1,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,1,1,1,1,0,0,0,1,1,1,1,1
map_mult_2_length = ($ - map_mult_2)/13

map_mult_3	byte	1,0,1,1,1,1,0,1,1,1,1,0,1
byte	1,0,0,1,0,1,0,1,0,1,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,1,0,0,0,0,0,0,0,0,0,1,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,1,0,1,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,1,0,0,0,0,1,0,0,0,0,1,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,1,0,1,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,1,0,1,0,0,0,0,1
byte	1,0,0,0,0,1,0,1,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,1,0,1,0,0,0,0,1
byte	1,0,0,0,0,1,0,1,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,1,0,1,0,1,0,0,0,1
byte	1,0,0,1,1,0,0,0,1,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,1,0,0,0,1,1,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,1,0,1,1,0,0,0,1
byte	1,0,0,0,0,1,0,1,0,0,0,0,1
byte	1,0,0,0,0,1,0,1,0,0,0,0,1
byte	1,0,0,0,0,1,0,1,0,0,0,0,1
byte	1,0,0,0,0,1,0,1,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,1,0,1,0,0,0,0,1
byte	1,0,0,0,0,1,0,1,0,0,0,0,1
byte	1,0,0,0,0,1,0,1,0,0,0,0,1
byte	1,0,0,0,0,1,0,1,0,0,0,0,1
byte	1,0,0,0,1,1,0,1,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,0,1,0,0,0,1,0,0,0,1
byte	1,0,0,1,1,0,0,0,1,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,0,0,0,0,0,1,0,0,1
byte	1,0,0,1,1,0,0,0,1,1,0,0,1
byte	1,0,0,0,1,0,1,0,1,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,1,1
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,1,1,0
byte	1,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,1,0
byte	0,1,1,0,0,0,0,0,0,0,0,1,0
byte	0,0,1,0,0,0,0,0,0,0,0,1,0
byte	0,0,1,0,0,0,0,0,0,0,0,1,1
byte	0,1,1,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,0,1
byte	1,1,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,1,1
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,1,1,0
byte	1,0,0,0,0,0,0,0,0,0,1,0,0
byte	1,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,1,0,0,0
byte	0,0,1,0,0,0,0,0,0,1,0,0,0
byte	0,0,1,0,0,0,0,0,0,1,0,0,0
byte	0,0,1,0,0,0,0,0,0,1,0,0,0
byte	0,0,1,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,1,0,0
byte	0,0,0,1,0,0,0,0,0,0,1,0,0
byte	0,0,0,1,0,0,0,0,0,0,1,0,0
byte	0,0,0,1,0,0,0,0,0,0,1,1,0
byte	0,0,1,1,0,0,0,0,0,0,0,1,0
byte	0,0,1,0,0,0,0,0,0,0,0,1,1
byte	0,0,1,0,0,0,0,0,0,0,0,1,1
byte	0,0,1,0,0,0,0,0,0,0,0,0,1
byte	0,1,1,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,1,1
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,0,1,0
byte	1,0,0,0,0,0,0,0,0,0,1,1,0
byte	1,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,1,1,0,0
byte	0,1,1,0,0,0,0,0,0,1,0,0,0
byte	0,0,1,0,0,0,0,0,0,1,0,0,0
byte	0,0,1,0,0,0,0,0,0,1,0,0,0
byte	0,0,1,0,0,0,0,0,0,1,0,0,0
byte	0,0,1,1,0,0,0,0,1,1,0,0,0
byte	0,0,0,1,0,0,0,0,1,0,0,0,0
byte	0,0,0,1,0,0,0,0,1,0,0,0,0
byte	0,0,0,1,0,0,0,0,1,0,0,0,0
byte	0,0,0,1,0,0,0,0,1,0,0,0,0
byte	0,0,0,1,1,0,0,0,1,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,0,1,0,0,0,0,1,0,0,0
byte	0,0,0,1,1,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,0,1,0,0
byte	0,0,0,1,0,0,0,0,0,0,1,0,0
byte	0,0,0,1,0,0,0,0,0,0,1,0,0
byte	0,0,0,1,0,0,0,0,0,0,1,0,0
byte	0,0,0,1,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,0,1,0
byte	0,0,1,0,0,0,0,0,0,0,0,1,0
byte	0,0,1,0,0,0,0,0,0,0,0,1,0
byte	0,0,1,0,0,0,0,0,0,0,0,0,1
byte	0,0,1,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,0,0,0,0,0,0,1
byte	0,1,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,1,0,0,1
byte	1,0,0,0,0,0,1,0,0,1,0,0,1
byte	1,0,0,0,0,0,1,0,0,1,0,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	1,0,0,1,0,0,1,0,0,1,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	1,0,0,0,0,0,1,0,0,0,0,0,1
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,1,0,0,0,0,0,0,0,0,0,1,1
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,1,0,0,0,0,0,0,0,1,1,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,1,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,1,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,1,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	1,1,1,1,0,0,0,0,0,0,1,1,1
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,1,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,0
byte	0,0,0,0,0,0,0,0,0,0,0,1,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,1
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,0,0,0,1,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,1,0,0,0,0,0,1
byte	0,0,0,1,0,0,1,0,0,0,0,0,1
byte	0,0,0,1,0,0,1,0,0,0,0,0,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,1
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,1,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,1,1,1
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,0,1,0,0,0,0,0,1,0,0,0
byte	0,0,1,1,0,0,0,0,0,1,1,1,1
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,0,1,0,0,0,0,0,0,0,1,0,0
byte	0,1,1,0,0,0,0,0,0,0,1,1,1
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	0,1,0,0,0,0,0,0,0,0,0,1,0
byte	1,1,0,0,0,0,0,0,0,0,0,1,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	1,0,0,0,0,0,0,0,0,0,0,0,1
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,1,1
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,1,1,0,0,0,1,0,0
byte	0,1,0,0,0,1,1,0,0,0,1,0,0
byte	0,1,1,0,0,1,1,0,0,1,1,0,0
byte	0,1,0,0,0,1,1,0,0,0,1,0,0
byte	0,1,0,0,0,1,1,0,0,0,1,0,0
byte	0,1,0,0,0,1,1,0,0,0,1,0,0
byte	0,1,0,0,0,1,1,0,0,0,1,0,0
byte	0,1,0,0,0,1,1,0,0,0,1,0,0
byte	0,1,0,0,0,1,1,0,0,0,1,0,0
byte	0,1,0,0,1,1,1,1,0,0,1,0,0
byte	0,1,0,0,0,1,1,0,0,0,1,0,0
byte	0,1,0,0,0,1,1,0,0,0,1,0,0
byte	0,1,0,0,0,1,1,0,0,0,1,0,0
byte	0,1,0,0,0,1,1,0,0,0,1,0,0
byte	0,1,0,0,0,1,1,0,0,0,1,0,0
byte	0,1,0,0,0,1,1,0,0,0,1,0,0
byte	0,1,1,0,0,1,1,0,0,1,1,0,0
byte	0,1,0,0,0,1,1,0,0,0,1,0,0
byte	0,1,0,0,0,1,1,0,0,0,1,0,0
byte	0,1,0,0,0,1,1,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,1,0,0,0,0,0,0,0,0,1,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,1,0,0,0
byte	0,0,1,0,0,0,0,0,0,1,0,0,0
byte	0,0,1,0,0,0,0,0,0,1,0,0,0
byte	0,0,1,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,1,0,0,0,0,0,0,1,0,0,0
byte	0,0,1,0,0,0,0,0,0,1,0,0,0
byte	0,0,1,0,0,0,0,0,0,1,0,0,0
byte	0,0,1,0,0,0,0,0,0,1,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	0,0,0,0,0,0,0,0,0,0,0,0,0
byte	1,1,1,1,1,0,0,1,1,1,1,1,1
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
byte	0,0,0,0,1,0,0,1,0,0,0,0,0
map_mult_3_length = ($-map_mult_3)/13

time	BYTE	0

.code
main PROC
; initialize Window
INVOKE GetStdHandle,STD_OUTPUT_HANDLE
mov consoleHandle, eax
INVOKE SetConsoleScreenBufferSize, consoleHandle, xyBound		; buffer size
INVOKE SetConsoleWindowInfo, consoleHandle, TRUE, ADDR xyRec	; window size
INVOKE GetConsoleCursorInfo, consoleHandle, ADDR cursorInfo		; hide cursor
mov cursorInfo.bVisible, FALSE
INVOKE SetConsoleCursorInfo, consoleHandle, ADDR cursorInfo
INVOKE SetConsoleTitle, ADDR titleStr					;set title
INVOKE CleanPage
; initialize the hero key
	mov heroNum, 4
	movzx ecx, heroNum
	mov ebx, 0
	mov edx, 0
	HeroIniLoop:
		mov ax, keys[ebx]
		mov hero[edx].key, ax
		mov hero[edx].color, 0
		mov hero[edx].isStand, 0
		mov hero[edx].movable, 0
		mov hero[edx].isAlive, 0
		mov hero[edx].direction, 1
		mov hero[edx].order, 4
		add ebx, type keys
		add edx, type hero
	LOOP HeroIniLoop
; GUI of game
Home:
	INVOKE HomePage
	.IF eax == 1
		jmp Color
	.ELSEIF eax == 2
		jmp Setting
	.ELSE
		jmp Fin
	.ENDIF
Color:
	INVOKE ColorPage, 6, 3, 11
	.IF eax == 0
		jmp Home
	.ELSE
		jmp GameInitial
	.ENDIF
Setting:
	INVOKE SettingPage
	jmp Home
 ;new game start
GameInitial:
	;check mode (single , multi-players)
	;initial map
	;single-map_solo, multi-map_mult_i (i = random(1,4))
	;initial hero (position, status)
	call Map_initial		; decide map and setting
	push game_map.map
	push ecx
	push esi
	mov ecx, 4
	mov esi, 0
HO:
	mov hero[esi].order, 4
	add esi, TYPE hero
	loop HO
	call RandOrder
	pop esi
	pop ecx
	pop game_map.map
	call hero_initial
	call repaint
Gaming:
call ReadMove
.IF time == 5
	call Update
call repaint
mov time, 0
.ENDIF
call check_GameOver	;check this game over or not
.IF ax == 5
jmp Gaming
.ELSE
	INVOKE OverPage
	.IF eax == 0
		jmp Home
	.ELSE
		jmp GameInitial
.ENDIF
.ENDIF
Fin:
exit
main ENDP

; GUI fuction
HomePage PROC USES ebx ecx edx
	push xyPos
	; paint background
	INVOKE CleanPage
	INVOKE PaintRect, ADDR attributeBW, 0, 0, xyBound.x, xyBound.y
	; write words
	mov xyPos.x, 30
	mov xyPos.y, 7
	INVOKE WriteConsoleOutputCharacter, consoleHandle,
			ADDR titleStr, (lengthof titleStr)-1, xyPos, ADDR cellsWritten
	add xyPos.x, 8
	add xyPos.y, 5
	INVOKE WriteConsoleOutputCharacter, consoleHandle,
			ADDR startStr, lengthof startStr, xyPos, ADDR cellsWritten
	dec xyPos.x
	add xyPos.y, 2
	INVOKE WriteConsoleOutputCharacter, consoleHandle,
			ADDR setStr, lengthof setStr, xyPos, ADDR cellsWritten
	inc xyPos.x
	add xyPos.y, 2
	INVOKE WriteConsoleOutputCharacter, consoleHandle,
			ADDR closeStr, lengthof closeStr, xyPos, ADDR cellsWritten
	; listener
	mov bx, 12
	INVOKE PaintEdge, '>', '<', bx, 34, 12
	ListenLoop:
		call ReadChar
		mov cx, bx
		.IF ax == 1c0dh 	; ENTER
			jmp Finish
		.ENDIF
		.IF ax == 4800h 	; UP
			sub bx, 2
		.ENDIF
		.IF ax == 5000h		; DOWN
			add bx, 2
		.ENDIF
		.IF bx < 12			; UP Bound
			mov bx, 16
		.ENDIF
		.IF bx > 16		; DOWN Bound
			mov bx, 12
		.ENDIF
		INVOKE PaintEdge, ' ', ' ', cx, 34, 12
		INVOKE PaintEdge, '>', '<', bx, 34, 12
	jmp ListenLoop
	Finish :
		sub bx, 10
		movzx eax, bx
		mov edx, 0
		mov cx, 2
		div cx
		mov bx, ax
		movzx eax, bx
	pop xyPos
	ret
HomePage ENDP


SettingPage PROC USES eax ebx ecx edx
	push xyPos
	; paint background
	INVOKE CleanPage
	INVOKE PaintRect, ADDR attributeBY, 0, 0, xyBound.x, xyBound.y
	; write words
	mov xyPos.x, 25
	mov xyPos.y, 5
	INVOKE WriteConsoleOutputCharacter, consoleHandle,
ADDR setTitStr, lengthof setTitStr, xyPos, ADDR cellsWritten
	INVOKE ListPlayer, 29, 9, 3, ADDR keyStr, lengthof keyStr
	mov xyPos.x, 52
	mov xyPos.y, 9
	mov ecx, 4
	mov ebx, 0
	KeyLoop:
		push ecx
		mov ax, hero[ebx].key
		mov char, al
		INVOKE WriteConsoleOutputCharacter, consoleHandle,
ADDR char, 1, xyPos, ADDR cellsWritten
		add ebx, type heroinfo
		add xyPos.y, 3
		pop ecx
	LOOP KeyLoop
	dec xyPos.x
	INVOKE WriteConsoleOutputCharacter, consoleHandle,
ADDR backStr, lengthof backStr, xyPos, ADDR cellsWritten
	inc xyPos.x
	; listener
	mov bx, 9
	INVOKE PaintEdge, '>', '<', bx, 48, 8
	ListenLoop:
		mov cx, bx
		call ReadChar
		.IF ax == 1c0dh 	;ENTER
			.IF bx == 21	; back
				jmp Finish
			.ENDIF
			.IF bx == 9
				mov edx, 0
			.ELSEIF bx == 12
				mov edx, 1* type heroinfo
			.ELSEIF bx == 15
				mov edx, 2* type heroinfo
			.ELSEIF bx == 18
				mov edx, 3* type heroinfo
			.ENDIF
			push edx
			mov hero[edx].key, 0
			mov xyPos.x, 52			; set key
			mov xyPos.y, bx
			mov char, ' '
			INVOKE WriteConsoleOutputCharacter, consoleHandle,
ADDR char, 1, xyPos, ADDR cellsWritten
			SetLoop:
				call ReadChar
				.IF ax == 1c0dh
					jmp SetLoop
				.ELSEIF al == 00h
					jmp SetLoop
				.ENDIF
				mov ecx, 4
				mov edx, 0
				CheckLoop:
					.IF ax == hero[edx].key
						jmp SetLoop
					.ENDIF
					add edx, type heroinfo
				LOOP CheckLoop
			pop edx
			mov hero[edx].key, ax
			mov char, al
			INVOKE WriteConsoleOutputCharacter, consoleHandle,
ADDR char, 1, xyPos, ADDR cellsWritten
			jmp ListenLoop
		.ELSEIF ax == 4800h 	;UP
			sub bx, 3
		.ELSEIF ax == 5000h		;DOWN
			add bx, 3
		.ELSE
			jmp ListenLoop
		.ENDIF
		.IF bx < 9 		;Top Bound
			mov bx, 21
		.ENDIF
		.IF bx > 21		;Bottom Bound
			mov bx, 9
		.ENDIF
		INVOKE PaintEdge, ' ', ' ', cx, 48, 8
		INVOKE PaintEdge, '>', '<', bx, 48, 8
	jmp ListenLoop
	Finish:
	pop xyPos
	ret
SettingPage ENDP

ColorPage PROC USES ebx ecx edx,
top:WORD, left:WORD, wid:WORD
	push xyPos
	; paint background
	INVOKE CleanPage
	INVOKE PaintRect, ADDR attributeBW, 0, 0, xyBound.x, xyBound.y
	; initialize
	mov ecx, 4
	mov ebx, 0
	mov edx, 0
	InitLoop:
		mov hero[edx].color, 0
		mov hero[edx].isAlive, 0
		mov isColors[ebx], 0
		add edx, type heroinfo
		add ebx, type isColors
	LOOP InitLoop
	mov playerNum, 0
	; write words
	mov xyPos.x, 25
	mov xyPos.y, 1
	INVOKE WriteConsoleOutputCharacter,consoleHandle,
ADDR colorTitStr, lengthof colorTitStr, xyPos, ADDR cellsWritten
	INVOKE ListPlayer, left, top, 4, ADDR colorStr, lengthof colorStr
	add left, 20
	mov ax, left
	add ax, 4
	mov xyPos.x, ax
	mov ax, top
	add ax, 16
	mov tmpWord, ax
	mov xyPos.y, ax
	INVOKE WriteConsoleOutputCharacter, consoleHandle,
ADDR backStr, lengthof backStr, xyPos, ADDR cellsWritten
	add xyPos.x, 19
	INVOKE WriteConsoleOutputCharacter, consoleHandle,
ADDR runStr, lengthof runStr, xyPos, ADDR cellsWritten
	; listener
	mov cx, top
	mov ax, left
	mov dx, cx
	mov bx, ax
	ListenLoop:
		INVOKE PaintEdge, ' ', ' ', dx, bx, wid
		INVOKE PaintEdge, '>', '<', cx, ax, wid
		mov dx, cx
		mov bx, ax
		call ReadChar
		.IF ax == 1c0dh 	;ENTER
			mov ax, bx
			.IF ax != left
				.IF playerNum == 0	; cannot start the game
					mov cx, top
					mov ax, left
					jmp ListenLoop
				.ENDIF
				mov eax, 1			; start the game
				jmp Finish
			.ELSEIF cx == tmpWord	; back
				mov eax, 0
				jmp Finish
			.ENDIF
			INVOKE PaintEdge, ' ', ' ', cx, ax, wid
			add ax, 2
			INVOKE PaintRect, ADDR attributeBW, ax, cx, 7, 1
			push ax
			.IF 	cx == 6		; hero 1
				mov eax, 0 * type heroinfo
			.ELSEIF cx == 10	; hero 2
				mov eax, 1 * type heroinfo
			.ELSEIF cx == 14	; hero 3
				mov eax, 2 * type heroinfo
			.ELSE				; hero 4
				mov eax, 3 * type heroinfo
			.ENDIF
			INVOKE ChooseColor, eax
			pop ax 
			INVOKE PaintRect, colorsPtr[edx], ax, cx, 7, 1
			sub ax, 2
			mov bx, ax
			mov dx, cx
		.ELSEIF ax == 4800h 	; UP
			mov ax, left
			sub cx, 4
		.ELSEIF ax == 5000h		; DOWN
			mov ax, bx
			add cx, 4
		.ELSEIF ax == 4b00h		; LEFT
			mov ax, left
		.ELSEIF ax == 4d00h		; RIGHT
			mov ax, left
			add ax, 20
			mov cx, top
			add cx, 16
		.ELSE
			mov ax, bx
			jmp ListenLoop
		.ENDIF
		.IF cx < top		;UP Bound
			mov cx, top
		.ELSEIF cx > tmpWord	;DOWN Bound
			mov cx, tmpWord
		.ENDIF
	jmp ListenLoop
	
	Finish:
	pop xyPos
	ret
ColorPage ENDP

OverPage PROC USES ebx ecx edx
	push xyPos
	call Clrscr
	.IF eax == 4
		mov xyPos.x, 38
		mov xyPos.y, 10
		INVOKE WriteConsoleOutputCharacter, consoleHandle,
			ADDR duceStr, lengthof duceStr, xyPos, cellsWritten
	.ELSE
		mov ecx, 3
		mov edx, hero[ebx].color
		mov eax, offset upStr
		mov xyPos.x, 40
		mov xyPos.y, 10
		push edx
		PaintLoop:
			push eax
			push ecx
			push edx
			INVOKE WriteConsoleOutputCharacter, consoleHandle,
					eax, 4, xyPos, cellsWritten
			pop edx
			push edx
			INVOKE WriteConsoleOutputAttribute, consoleHandle,
				edx, 4, xyPos, cellsWritten
			pop edx
			pop ecx
			pop eax
			add eax, 4
			inc xyPos.y
		LOOP PaintLoop
		pop edx
		mov xyPos.y, 5
		.IF playerNum == 1
			mov xyPos.x, 37
			INVOKE WriteConsoleOutputCharacter, consoleHandle,
				ADDR ggStr, lengthof ggStr, xyPos, cellsWritten
			mov xyPos.x, 28
			mov xyPos.y, 17
			INVOKE WriteConsoleOutputCharacter, consoleHandle,
				ADDR scoreStr, lengthof scoreStr, xyPos, cellsWritten
			mov xyPos.x, 48
			INVOKE SetConsoleCursorPosition , consoleHandle, xyPos
			movzx eax, game_map.px
			call WriteInt
			INVOKE PaintEdge, ' ', 'm', 17, 48, 6
		.ELSE
			mov xyPos.x, 40
			INVOKE WriteConsoleOutputCharacter, consoleHandle,
				ADDR winStr, lengthof winStr, xyPos, cellsWritten
		.ENDIF
	.ENDIF
	
	mov xyPos.x, 20
	mov xyPos.y, 20
	INVOKE WriteConsoleOutputCharacter, consoleHandle,
		ADDR homeStr, lengthof homeStr, xyPos, cellsWritten
	mov xyPos.x, 55
	INVOKE WriteConsoleOutputCharacter, consoleHandle,
		ADDR retryStr, lengthof retryStr, xyPos, cellsWritten
	mov xyPos.x, 57
	mov xyPos.y, 4
	INVOKE PaintFireWork, offset attributeB
	mov xyPos.x, 18
	mov xyPos.y, 3
	INVOKE PaintFireWork, offset attributeG
	mov xyPos.x, 12
	mov xyPos.y, 11
	INVOKE PaintFireWork, offset attributeY
	mov xyPos.x, 68
	mov xyPos.y, 12
	INVOKE PaintFireWork, offset attributeR
	mov ebx, 17
	ListenLoop:
		mov dx, bx
		INVOKE PaintEdge, '>', '<', 20, bx, 14
		call ReadChar
		.IF ax == 1c0dh 		; ENTER
			.IF bx == 17
				mov eax, 0
			.ELSE
				mov eax, 1
			.ENDIF
			jmp Finish
		.ELSEIF ax == 4b00h		; LEFT
			mov bx, 17
		.ELSEIF ax == 4d00h		; RIGHT
			mov bx, 52
		.ENDIF
		INVOKE PaintEdge, ' ', ' ', 20, dx, 14
	LOOP ListenLoop
	Finish:
	pop xyPos
	ret
OverPage ENDP


PaintRect PROC USES eax ebx ecx edx,
attribute:PTR WORD,
x:WORD, y:WORD, wid:WORD, height:WORD
	push xyPos
	mov bx, x
	mov xyPos.x, bx
	mov bx, y
	mov xyPos.y, bx
	movzx ebx, wid
	movzx ecx, height
	PaintLoop:
		push ecx
		INVOKE WriteConsoleOutputAttribute, consoleHandle,
attribute, ebx, xyPos, ADDR cellsWritten
		inc xyPos.y
		pop ecx
	LOOP PaintLoop
	pop xyPos
	ret
PaintRect ENDP

ListPlayer PROC USES ecx,
left:WORD, top:WORD, gap:WORD,
item:PTR BYTE, len:DWORD
	push xyPos
	mov cx, left
	mov xyPos.x, cx
	mov cx, top
	mov xyPos.y, cx
	mov ecx, 4
	mov char, '1'
	KeyLoop:
		push ecx
		INVOKE WriteConsoleOutputCharacter, consoleHandle,
ADDR playStr, lengthof playStr, xyPos, ADDR cellsWritten
		add xyPos.x, 7
		INVOKE WriteConsoleOutputCharacter, consoleHandle,
ADDR char, 1, xyPos, ADDR cellsWritten	
		add xyPos.x, 4
		INVOKE WriteConsoleOutputCharacter, consoleHandle,
item, len, xyPos, ADDR cellsWritten
		sub xyPos.x, 11
		mov cx, gap
		add xyPos.y, cx
		inc char
		pop ecx
		dec ecx
		cmp ecx, 0
	jnz KeyLoop
	pop xyPos
	ret
ListPlayer ENDP

PaintEdge PROC USES eax ebx ecx edx,
leftChar:BYTE, rightChar:BYTE,
line:WORD, left:WORD, wid:WORD
	push xyPos
	mov ax, left
	mov xyPos.x, ax
	mov ax, line
	mov xyPos.y, ax
	mov al, leftChar
	mov char, al
	INVOKE WriteConsoleOutputCharacter, consoleHandle,
ADDR char, 1, xyPos, ADDR cellsWritten
	mov ax, wid
	add xyPos.x, ax
	mov al, rightChar
	mov char, al
	INVOKE WriteConsoleOutputCharacter, consoleHandle,
ADDR char, 1, xyPos, ADDR cellsWritten
	pop xyPos
	ret
PaintEdge ENDP

ChooseColor PROC USES eax ebx ecx,
	point:DWORD
	push xyPos
	push tmpDWord
	; fin hero color
	mov eax, point
	mov ebx, hero[eax].color
	mov tmpDWord, ebx
	.IF ebx == 0
		inc playerNum
		mov hero[eax].isAlive, 1
	.ENDIF
	; show chose
	mov dx, 6
	mov ecx, 4
	mov eax, 0
	mov ebx, 0
	ShowLoop:
		push ecx
		mov ecx, tmpDWord
		.IF isColors[eax] == 0 || colors[ebx] == ecx
			mov ecx, colorsPtr[ebx]
			INVOKE PaintRect, ecx, 50, dx, 8, 1
			mov isChoose[eax], 1
		.ELSE
			mov isChoose[eax], 0
		.ENDIF
		mov ecx, tmpDWord
		.IF colors[ebx] == ecx
			mov isColors[eax], 0
		.ENDIF
		add eax, type isColors
		add ebx, type colorsPtr
		add edx, 4
		pop ecx
	LOOP ShowLoop
	; listener
	mov ebx, 6
	mov edx, 0
	mov ecx, 0
	ListenLoop:
		INVOKE PaintEdge, ' ', ' ', bx, 49, 10
		mov eax, ecx
		mov ecx, 4
		FindLoop:
			push ecx
			.IF dx == 1
				sub bx, 4
				sub eax, type isChoose
			.ELSE
				add bx, 4
				add eax, type isChoose
			.ENDIF
			.IF ebx < 6
				mov bx, 18
				mov eax, 3*type isChoose
			.ELSEIF bx > 18
				mov bx, 6
				mov eax, 0
			.ENDIF
			.IF isChoose[eax] == 1
				pop ecx
				jmp Arrow
			.ENDIF
			pop ecx
			dec ecx
			cmp ecx, 0
		jnz FindLoop
		Arrow:
			INVOKE PaintEdge, '>', '<', bx, 49, 10
		mov ecx, eax
		push ax
		call ReadChar
		.IF ax == 1c0dh 		;ENTER
			pop ax
			jmp Set
		.ELSEIF ax == 4800h 	; UP
			pop ax
			mov edx, 1
		.ELSEIF ax == 5000h		; DOWN
			pop ax
			mov edx, 0
		.ELSE
			pop ax
			mov eax, ecx
			jmp Arrow
		.ENDIF
	jmp ListenLoop
	Set:
		INVOKE PaintEdge, ' ', ' ', bx, 49, 10
		INVOKE PaintRect, ADDR attributeBW, 50, 6, 8, 16
		mov eax, ecx
		sub ebx, 6
		mov isColors[ecx], 1
		add ecx, eax
		mov eax, point
		mov edx, colors[ecx]
		mov hero[eax].color, edx
		mov edx, ebx
	pop tmpDWord
	pop xyPos
	ret
ChooseColor ENDP

PaintFireWork PROC USES eax ebx edx ecx,
	cPt:DWORD
	mov ecx, 5
	mov eax, offset firewordSTr
	FireLoop:
		push ecx
		push eax
		INVOKE WriteConsoleOutputCharacter, consoleHandle,
			eax, 7, xyPos, cellsWritten
		INVOKE WriteConsoleOutputAttribute, consoleHandle,
			cPt, 7, xyPos, cellsWritten
		pop eax
		pop ecx
		add eax, 7
		inc xyPos.y
	LOOP FireLoop
	ret
PaintFireWork ENDP

CleanPage PROC USES eax ebx ecx edx
	push xyPos
	mov ecx, 26
	mov xyPos.x, 0
	mov xyPos.y, 0
	YLoop:
		push ecx
		INVOKE WriteConsoleOutputAttribute, consoleHandle,
			ADDR attributeWK, lengthof attributeWK, xyPos, cellsWritten
		INVOKE WriteConsoleOutputCharacter, consoleHandle,
			ADDR blankStr, lengthof blankStr, xyPos, cellsWritten
		inc xyPos.y
		pop ecx
	LOOP YLoop
	pop xyPos
	ret
CleanPage ENDP

; paint map
repaint Proc USES eax ebx ecx edx esi
	push xyPos
	INVOKE CleanPage
	; get start point
	movzx eax, game_map.px
	; paint block
	mov xyPos.x, 0
	mov ecx, 42
	XLoop:
		push ecx
		mov xyPos.y, 0
		mov ecx, 13
		push eax
		shr eax, 1
		mov ebx, 13
		mul ebx
		mov esi, eax
		add esi, game_map.map
		YLoop:
			push ecx
			mov bl, [esi]
			.IF bl == 1
				INVOKE PaintBlock, ADDR blockStr
			;.ELSE
			;	INVOKE PaintBlock, ADDR blankStr
			.ENDIF
			inc esi
			add xyPos.y, 2
			pop ecx
		LOOP YLoop
		pop eax
		inc eax
		add xyPos.x, 2
		pop ecx
	LOOP XLoop
	; paint hero
	call PaintHero
	pop xyPos
	ret
repaint ENDP

PaintBlock PROC USES eax ebx ecx edx, charPT:DWORD
	push xyPos
	mov ecx, 2
	PaintLoop:
		push ecx
		INVOKE WriteConsoleOutputCharacter, consoleHandle,
			charPT, 2, xyPos, ADDR cellsWritten
		inc xyPos.y
		pop ecx
	LOOP PaintLoop
	pop xyPos
	ret
PaintBlock ENDP


PaintHero PROC USES eax ebx ecx edx esi
	push xyPos
	mov esi, 0
	mov ecx, 4
	PaintLoop:
		push ecx
		mov ax, hero[esi].pos.x
		add ax, hero[esi].pos.x
		mov xyPos.x, ax
		mov ax, hero[esi].pos.y
		mov xyPos.y, ax
		mov ebx, hero[esi].color
		push esi
		.IF hero[esi].isAlive == 1
			.IF hero[esi].direction == 1
				mov eax, 1
				mov edx, offset upStr
			.ELSE
				mov eax, -1
				mov edx, offset downStr
			.ENDIF
			.IF hero[esi].isStand == 0
				.IF hero[esi].direction == 0
					dec xyPos.y
				.ENDIF
				sub xyPos.x, 2
				mov ecx, 3
				StandP:
					push ecx
					push eax
					push edx
					push ebx
					INVOKE WriteConsoleOutputCharacter, consoleHandle,
						edx, 4, xyPos, cellsWritten
					pop ebx
					push ebx
					INVOKE WriteConsoleOutputAttribute, consoleHandle,
						ebx, 4, xyPos, ADDR cellsWritten
					pop ebx
					pop edx
					pop eax
					add edx, 4
					add xyPos.y, ax
					pop ecx
				LOOP StandP
			.ELSE
				mov edx, offset flyStr
				sub xyPos.x,6
				dec xyPos.y
				push eax
				push edx
				push ebx
				INVOKE WriteConsoleOutputCharacter, consoleHandle,
					edx, 6, xyPos, cellsWritten
				pop ebx
				push ebx
				INVOKE WriteConsoleOutputAttribute, consoleHandle,
					ebx, 6, xyPos, ADDR cellsWritten
				pop ebx
				pop edx
				pop eax
				add edx, 6
				inc xyPos.y
				push ebx
				INVOKE WriteConsoleOutputCharacter, consoleHandle,
					edx, 6, xyPos, cellsWritten
				pop ebx
				INVOKE WriteConsoleOutputAttribute, consoleHandle,
					ebx, 6, xyPos, ADDR cellsWritten
			.ENDIF
		.ENDIF
		pop esi
		add esi, type hero
		pop ecx
		dec ecx
		cmp ecx, 0
	jnz PaintLoop
	
	pop xyPos
	ret
PaintHero ENDP

;call Update
Update PROC
push ecx
push esi
push ax
movzx ecx, heroNum	;4 heros
mov esi, 0	;index
call check_Center	;ax = isCenter
U1:
.IF hero[esi].isAlive == 1	;check whether is alive
	.IF ax == 0	;判斷是否有hero在中間
		push ax
	INVOKE check_Box, esi, 3	;判斷前方無box
.IF  ax == 0
	INVOKE check_Hero, esi, 3		;判斷前方無人
	.IF ax == 0
	INVOKE HeroMove, esi, 3	;向前移動
.ENDIF
.ENDIF
pop ax	
	.ENDIF
	push ax
	INVOKE check_Box, esi, 3	;判斷前方有box
.IF  ax == 1
INVOKE HeroMove, esi, 2		;向後移動
.ENDIF
pop ax
.ENDIF
add esi, TYPE heroinfo
dec ecx
cmp ecx, 0
jne U1
call ScrollMap		;移動地圖，向左一單位
movzx ecx, heroNum
mov esi, 0	;index
U2:
.IF hero[esi].isAlive == 1	;check whether is alive
.IF hero[esi].direction == 0	;move upward
	push ax
	INVOKE check_Box, esi, 0
	.IF ax == 0	;判斷上方無box
		INVOKE check_Hero, esi, 0		;判斷上方無hero
		.IF ax == 0
INVOKE HeroMove, esi, 0		;向上移動	
.ELSE
	mov hero[esi].movable, al
		.ENDIF
	.ELSE
		mov hero[esi].movable, al
	.ENDIF
	pop ax
.ELSE				;move downward
	push ax
	INVOKE check_Box, esi, 1
	.IF ax == 0	;判斷下方無box
		INVOKE check_Hero, esi, 1		;判斷下方無hero
.IF ax == 0
			INVOKE HeroMove, esi, 1		;向下移動
		.ELSE
			mov hero[esi].movable, al
		.ENDIF
	.ELSE
		mov hero[esi].movable, al
	.ENDIF
	pop ax
	.ENDIF
.ENDIF
add esi, TYPE heroinfo
dec ecx
cmp ecx, 0
jne U2

pop ax
pop esi
pop ecx
call check_FinalStatus	;check outside and fly
	ret
Update ENDP

check_Center PROC
	push ecx
	push esi
	movzx ecx, heroNum	;4 heros
	mov esi, 0	;index
	mov ax, 0
C1:
	.IF hero[esi].isAlive	;是否死亡
		.IF hero[esi].pos.x >= 21	;是否在地圖中間
			mov ax, 1
jmp C2
		.ENDIF
	.ENDIF
	add esi, TYPE heroinfo
	loop C1
C2:
	pop esi
pop ecx
	ret
check_Center ENDP

;direction : BYTE	;0-up, 1-down, 2-left, 3-right
;game_map.mapSize.y*(game_map.px + hero[edi].pos.x) + hero[edi].pos.y + ???
check_Box PROC uses esi edi ebx edx,
	num : DWORD,
	direction : BYTE
	mov edi, num
	;stand
	.IF hero[edi].direction == 0 && hero[edi].isStand == 0
		;up , up
		.IF direction == 0
			
				;計算是否在偶數點上
			movzx eax , hero[edi].pos.y
			and eax , 1
			;y mod 2 == 0 //在非格子點上
			.IF eax == 0
				mov ax , 0
				ret
			.ENDIF
				;若在太上方
			.IF hero[edi].pos.y < 5
				mov ax , 0
				ret
			.ELSEIF hero[edi].pos.y <= 26
				movzx eax , hero[edi].pos.x
				add ax , game_map.px
				mov esi , eax
				
					;計算向上一格之格子點位置
				shr eax , 1
				mov ebx , 13
				mul ebx
				mov bx , hero[edi].pos.y
				sub ebx , 4 ; shift y to where we want
				shr ebx , 1 
				add eax , ebx
				;eax = 上方右邊block
				
				push eax 
				mov eax , esi
				pop esi
				;esi = 上方右邊block
				
					;計算向可能向上一格會碰到的另一格之格子點位置
				sub eax , 1
				shr eax , 1
				mov ebx , 13
				mul ebx
				mov bx , hero[edi].pos.y
				sub ebx , 4 ; shift y to where we want
				shr ebx , 1 
				add eax , ebx
				;eax = 上方左邊block
				
				
				mov edx , game_map.map
				;加上 offset
				add eax , edx
				add esi , edx
				
				;上方右邊block、上方左邊block是否為0
				.IF BYTE PTR[esi] == 0 && BYTE PTR[eax] == 0
					mov ax , 0
					ret
				.ELSE
					mov ax , 1
					ret
				.ENDIF
			.ENDIF
		;up,down
		.ELSEIF direction == 1
			movzx eax , hero[edi].pos.y
			and eax , 1
			;y mod 2 == 0 //在非格子點上
			.IF eax == 1
				mov ax , 0
				ret
			.ENDIF
			;若在太下方
			.IF hero[edi].pos.y > 24
				mov ax , 0
				ret
			.ELSEIF hero[edi].pos.y >= 0 && hero[edi].pos.y <= 24

				movzx eax , hero[edi].pos.x
				add ax , game_map.px
				mov esi , eax

				shr eax , 1
				mov ebx , 13
				mul ebx
				mov bx , hero[edi].pos.y
				;sub ebx , 0 ; shift y to where we want
				shr ebx , 1 
				add eax , ebx
				;eax = 下方右邊block
				
				push eax 
				mov eax , esi
				pop esi
				;esi = 下方右邊block
				
				sub eax , 1
				shr eax , 1
				mov ebx , 13
				mul ebx
				mov bx , hero[edi].pos.y
				;sub ebx , 0 ; shift y to where we want
				shr ebx , 1
				add eax , ebx
				
				;eax = 下方左邊block
				
				mov edx , game_map.map
				;加上 offset
				add eax , edx
				add esi , edx
				;下方右邊block、下方左邊block是否為0
				.IF BYTE PTR[esi] == 0 && BYTE PTR[eax] == 0
					mov ax , 0
					ret
				.ELSE
					mov ax , 1
					ret
				.ENDIF
			.ENDIF
		;up , right
		.ELSEIF direction == 3
			movzx eax , hero[edi].pos.x
			add ax , game_map.px
			and eax , 1
			
			;x mod 2 == 0;是否在格子點上
			.IF eax == 0
				mov ax , 0
				ret
			.ENDIF
			
			movzx eax , hero[edi].pos.x
			add ax , game_map.px
			add eax , 2
			shr eax , 1
			
			mov ebx , 13
			mul ebx
			;eax = (x,0)轉換後的值
			
			mov esi , eax
			
			mov bx , hero[edi].pos.y
			.IF bx == 0
				mov ax , 1
				ret
			.ENDIF
			dec ebx
			shr ebx , 1
			add eax , ebx
			;eax = 右邊下方的block
			mov bx , hero[edi].pos.y
			.IF bx <= 2
				add eax, game_map.map
				.IF BYTE PTR[eax] == 0
					mov ax , 0
					ret
				.ELSEIF BYTE PTR[eax] == 1
					mov ax , 1
					ret
				.ENDIF
			.ENDIF
			sub ebx , 3
			shr ebx , 1
			add esi , ebx
			;esi = 右邊上方的block
			
			mov edx , game_map.map
			;加上offset
			add eax , edx
			add esi , edx
			
			.IF BYTE PTR[esi] == 0 && BYTE PTR[eax] == 0
				mov ax , 0
				ret
			.ELSE
				mov ax , 1
				ret
			.ENDIF

		.ENDIF
	.ELSEIF hero[edi].direction == 1 && hero[edi].isStand == 0
		;down,down
		.IF direction == 1

			movzx eax , hero[edi].pos.y
			and eax , 1
			;y mod 2 == 0
			.IF eax == 0
				mov ax , 0
				ret
			.ENDIF
			.IF hero[edi].pos.y > 21
				mov ax , 0
				ret
			.ELSEIF hero[edi].pos.y >= 0 
				movzx eax , hero[edi].pos.x
				add ax , game_map.px
				mov esi , eax

				shr eax , 1
				mov ebx , 13
				mul ebx
				mov bx , hero[edi].pos.y
				add ebx , 3 ; shift y to where we want
				shr ebx , 1 
				add eax , ebx
				
				push eax 
				mov eax , esi
				pop esi
				
				sub eax , 1
				shr eax , 1
				mov ebx , 13
				mul ebx
				mov bx , hero[edi].pos.y
				add ebx , 3 ; shift y to where we want
				shr ebx , 1 
				add eax , ebx				
				
				mov edx , game_map.map
				add eax , edx
				add esi , edx

				.IF BYTE PTR[esi] == 0 && BYTE PTR[eax] == 0
					mov ax , 0
					ret
				.ELSE
					mov ax , 1
					ret
				.ENDIF
			.ENDIF
		;down,up
		.ELSEIF direction == 0
			movzx eax , hero[edi].pos.y
			and eax , 1
			;y mod 2 == 0
			.IF eax == 1
				mov ax , 0
				ret
			.ENDIF
			
			.IF hero[edi].pos.y < 2
				mov ax , 0
				ret
			.ELSEIF hero[edi].pos.y >= 2

				movzx eax , hero[edi].pos.x
				add ax , game_map.px
				mov esi , eax

				shr eax , 1
				mov ebx , 13
				mul ebx
				mov bx , hero[edi].pos.y
				;add ebx , 0 ; shift y to where we want
				shr ebx , 1 
				add eax , ebx
				
				push eax 
				mov eax , esi
				pop esi
				
				sub eax , 1
				shr eax , 1
				mov ebx , 13
				mul ebx
				mov bx , hero[edi].pos.y
				;add ebx , 0 ; shift y to where we want
				shr ebx , 1 
				add eax , ebx		
				
				mov edx , game_map.map
				add eax , edx
				add esi , edx

				.IF BYTE PTR[esi] == 0 && BYTE PTR[eax] == 0
					mov ax , 0
					ret
				.ELSE
					mov ax , 1
					ret
				.ENDIF
			.ENDIF
		;down , right
		.ELSEIF direction == 3
			movzx eax , hero[edi].pos.x
			add ax , game_map.px
			and eax , 1
			;x mod 2 == 0
			.IF eax == 0
				mov ax , 0
				ret
			.ENDIF
			
			movzx eax , hero[edi].pos.x
			add ax , game_map.px
			add ax , 2
			shr eax , 1
			mov ebx , 13
			mul ebx
			
			mov esi , eax

			mov bx , hero[edi].pos.y
			;add ebx , 0
			shr ebx , 1

			add eax , ebx

			mov bx , hero[edi].pos.y
			add ebx , 2
			shr ebx , 1

			add esi , ebx
			
			mov edx , game_map.map
			add eax , edx
			add esi , edx

			.IF BYTE PTR[esi] == 0 && BYTE PTR[eax] == 0
				mov ax , 0
				ret
			.ELSE
				mov ax , 1
				ret
			.ENDIF
		.ENDIF
	.ELSEIF hero[edi].isStand == 1
		;right , up
		.IF direction == 0 
			.IF hero[edi].pos.y < 3
				mov ax , 0
				ret
			.ENDIF
			movzx eax , hero[edi].pos.y 
			and eax , 1
			.IF eax == 0
				mov ax , 0
				ret
			.ENDIF
			movzx eax , hero[edi].pos.x
			add ax , game_map.px
			
			mov esi , eax
			
			sub eax , 1
			shr eax , 1
			mov esi , eax
			mov ebx , 13
			mul ebx
			
			push eax 
			mov eax , esi
			pop esi
			
			sub eax , 3
			shr eax , 1
			mov esi , eax
			mov ebx , 13
			mul ebx
			
			
			mov bx , hero[edi].pos.y
			sub ebx , 2
			shr ebx , 1
			
			add eax , ebx
			add esi , ebx

			mov edx , game_map.map
			add eax , edx
			add esi , edx

			.IF BYTE PTR[esi] == 0 && BYTE PTR[eax] == 0
				mov ax , 0
				ret
			.ELSE
				mov ax , 1
				ret
			.ENDIF
		;right,down
		.ELSEIF direction == 1
			.IF hero[edi].pos.y > 23
				mov ax , 0
				ret
			.ENDIF
			movzx eax , hero[edi].pos.y 
			and eax , 1
			.IF eax == 0
				mov ax , 0
				ret
			.ENDIF
			movzx eax , hero[edi].pos.x
			add ax , game_map.px
			
			mov esi , eax
			
			sub eax , 1
			shr eax , 1
			mov esi , eax
			mov ebx , 13
			mul ebx
			
			push eax 
			mov eax , esi
			pop esi
			
			sub eax , 3
			shr eax , 1
			mov esi , eax
			mov ebx , 13
			mul ebx
			
			
			mov bx , hero[edi].pos.y
			add ebx , 2
			shr ebx , 1
			
			add eax , ebx
			add esi , ebx
			
			mov edx , game_map.map
			add eax , edx
			add esi , edx

			.IF BYTE PTR[esi] == 0 && BYTE PTR[eax] == 0
				mov ax , 0
				ret
			.ELSE
				mov ax , 1
				ret
			.ENDIF
		;right,right
		.ELSEIF direction == 3
			movzx eax , hero[edi].pos.x
			add ax , game_map.px
			and eax , 1
			.IF eax == 1
				mov ax , 0
				ret
			.ENDIF

			movzx eax , hero[edi].pos.x
			add ax , game_map.px
			
			shr eax , 1
			
			mov ebx , 13
			mul ebx
						
			mov esi , eax

			mov bx , hero[edi].pos.y
			shr ebx , 1
			add eax , ebx

			mov bx , hero[edi].pos.y
			sub ebx , 1
			shr ebx , 1
			add esi , ebx
			
			mov edx , game_map.map
			add eax , edx
			add esi , edx

			.IF BYTE PTR[esi] == 0 && BYTE PTR[eax] == 0
				mov ax , 0
				ret
			.ELSE
				mov ax , 1
				ret
			.ENDIF

		.ENDIF
	.ENDIF	
	mov eax , 0
	sub eax , 2
	ret
check_Box ENDP


check_Hero PROC uses  ecx edx esi edi,
	num : DWORD,
	direction : BYTE
	LOCAL flag
;ax = 1 有人, ebx = enemy num
mov edi, num
mov flag, 1
	movzx ecx, heroNum
	mov esi, 0
L1:
	.IF esi != num		;若不是被檢察英雄
	mov ax, 0
	mov bx, 0
	mov dx, 0
	.IF hero[esi].isAlive == 1
		mov ax, hero[esi].pos.x
		mov bx, hero[esi].pos.x
		mov dx, hero[esi].pos.y
		.IF hero[edi].isStand == 0 && hero[edi].direction == 1 && direction == 1
			mov flag, 0
	.IF hero[esi].isStand == 0 
		sub ax, 1
		add bx, 1
		.IF hero[esi].direction == 1
			sub dx, 3
		.ELSEIF hero[esi].direction == 0
			sub dx, 6
		.ENDIF
	.ELSE
		sub ax, 3
		sub dx, 4
	.ENDIF
		.ELSEIF hero[edi].isStand == 0 && hero[edi].direction == 0 && direction == 0
mov flag, 0
	.IF hero[esi].isStand == 0 
		sub ax, 1
		add bx, 1
		.IF hero[esi].direction == 1
			add dx, 6
		.ELSEIF hero[esi].direction == 0
			add dx, 3
		.ENDIF
	.ELSE
		sub ax, 3
		add dx, 4
	.ENDIF
.ELSEIF hero[edi].isStand == 1 && direction == 0
	mov flag, 0
	.IF hero[esi].isStand == 0 
		add bx, 3
		.IF hero[esi].direction == 1
			add dx, 4
		.ELSEIF hero[esi].direction == 0
			add dx, 1
		.ENDIF
	.ELSE
		sub ax, 2
		add bx, 2
		add dx, 2
	.ENDIF 
.ELSEIF hero[edi].isStand == 1 && direction == 1
	mov flag, 0
	.IF hero[esi].isStand == 0 
add bx, 3
		.IF hero[esi].direction == 1
			sub dx, 1
		.ELSEIF hero[esi].direction == 0
			sub dx, 4
		.ENDIF
	.ELSE
		sub ax, 2
		add bx, 2
		sub dx, 2
	.ENDIF 
		.ENDIF
		.IF flag == 1
			jmp FC
		.ENDIF
		.IF ax <= hero[edi].pos.x && hero[edi].pos.x <= bx && hero[edi].pos.y == dx
			mov ax, 1
			mov ebx, esi
			jmp RetP
		.ENDIF
FC:		mov flag, 1
		mov ax, hero[esi].pos.y
		mov bx, hero[esi].pos.y
		mov dx, hero[esi].pos.x
		.IF hero[edi].isStand == 0 && hero[edi].direction == 1 && direction == 3
			mov flag, 0
	.IF hero[esi].isStand == 0 
		sub dx, 2
		.IF hero[esi].direction == 1
			sub ax, 2
			add bx, 2
		.ELSEIF hero[esi].direction == 0
			sub ax, 5
			sub bx, 1
		.ENDIF
	.ELSE
		sub ax, 3
		sub dx, 3
	.ENDIF
.ELSEIF hero[edi].isStand == 0 && hero[edi].direction == 1 && direction == 2
	mov flag, 0
	.IF hero[esi].isStand == 0 
		add dx, 2
		.IF hero[esi].direction == 1
			sub ax, 2
			add bx, 2
		.ELSEIF hero[esi].direction == 0
			sub ax, 5
			sub bx, 1
		.ENDIF
	.ELSE
		sub ax, 3
		add dx, 1
	.ENDIF
.ELSEIF hero[edi].isStand == 0 && hero[edi].direction == 0 && direction == 3
	mov flag, 0
	.IF hero[esi].isStand == 0 
		sub dx, 2
		.IF hero[esi].direction == 1
			add ax, 1
			add bx, 5
		.ELSEIF hero[esi].direction == 0
			sub ax, 2
			add bx, 2
		.ENDIF
	.ELSE
		add bx, 3
		sub dx, 4
	.ENDIF
.ELSEIF hero[edi].isStand == 0 && hero[edi].direction == 0 && direction == 2	
	mov flag, 0
.IF hero[esi].isStand == 0 
		add dx, 2
		.IF hero[esi].direction == 1
			add ax, 1
			add bx, 5
		.ELSEIF hero[esi].direction == 0
			sub ax, 2
			add bx, 2
		.ENDIF
	.ELSE
		add bx, 3
		add dx, 1
	.ENDIF
.ELSEIF hero[edi].isStand == 1 && direction == 3
	mov flag, 0
.IF hero[esi].isStand == 0 
		sub dx, 1
		.IF hero[esi].direction == 1
			add bx, 3
		.ELSEIF hero[esi].direction == 0
			sub ax, 3
		.ENDIF
	.ELSE
		sub ax, 1
		add bx, 1
		sub dx, 3
	.ENDIF
.ELSEIF hero[edi].isStand == 1 && direction == 2
	mov flag, 0
.IF hero[esi].isStand == 0 
		add dx, 4
		.IF hero[esi].direction == 1
			add bx, 3
		.ELSEIF hero[esi].direction == 0
			sub ax, 3
		.ENDIF
	.ELSE
		sub ax, 1
		add bx, 1
		add dx, 3
	.ENDIF
.ENDIF
.IF flag == 1
		jmp FC2
	.ENDIF
.IF ax <= hero[edi].pos.y && hero[edi].pos.y <= bx && hero[edi].pos.x == dx
			mov ax, 1
			mov ebx, esi
			jmp RetP
		.ENDIF

		
.ENDIF
.ENDIF
FC2:
	add esi, TYPE heroinfo
	dec ecx
	cmp ecx, 0
	jne L1
	mov eax, 0
	mov ebx, 0
RetP:
ret
check_Hero ENDP

check_FinalStatus PROC
	push ecx
	push esi
	movzx ecx, heroNum
	mov esi, 0	;index
F1:
	.IF hero[esi].isAlive == 1
	push ax
	mov ax, 0
	.IF hero[esi].pos.x > 42	;check x-outside
		mov hero[esi].isAlive, al
	.ELSEIF hero[esi].pos.y > 25		;check y-outside
mov hero[esi].isAlive, al
	.ENDIF
	push ebx
	.IF hero[esi].direction == 0
		INVOKE check_Hero, esi, 0	;判斷上方有Hero
		.IF hero[esi].isStand == 0 && ax == 1	;站轉飛
			mov hero[esi].isStand, al
			mov ax, hero[esi].pos.x
			mov bx, hero[esi].pos.y
			inc ax
			sub bx, 2
			mov hero[esi].pos.x, ax
			mov hero[esi].pos.y, bx
		.ELSEIF hero[esi].isStand == 1 && ax == 0	;飛轉站
			mov hero[esi].isStand, al
			mov ax, hero[esi].pos.x
			mov bx, hero[esi].pos.y
			dec ax
			add bx, 2
			mov hero[esi].pos.x, ax
			mov hero[esi].pos.y, bx
		.ENDIF
	.ELSE
		INVOKE check_Hero, esi, 1	;判斷下方有Hero
		.IF hero[esi].isStand == 0 && ax == 1	;站轉飛
			mov hero[esi].isStand, al
			mov ax, hero[esi].pos.x
			mov bx, hero[esi].pos.y
			inc ax
			add bx, 2
			mov hero[esi].pos.x, ax
			mov hero[esi].pos.y, bx
		.ELSEIF hero[esi].isStand == 1 && ax == 0	;飛轉站
			mov hero[esi].isStand, al
			mov ax, hero[esi].pos.x
			mov bx, hero[esi].pos.y
			dec ax
			sub bx, 2
			mov hero[esi].pos.x, ax
			mov hero[esi].pos.y, bx
		.ENDIF
	.ENDIF
	pop ebx
	pop ax
.ENDIF
add esi, TYPE heroinfo
dec ecx
cmp ecx, 0
jne F1
	pop esi
	pop ecx
	ret
check_FinalStatus ENDP

HeroMove PROC uses edi,
	num : DWORD,
	direction : BYTE
	mov edi, num
	push ax
	.IF direction == 0	;向上hero[num].pos.y-1
		mov ax, hero[edi].pos.y
		dec ax
		mov hero[edi].pos.y, ax
		INVOKE check_Box, num, 0	;判斷上方有box
		mov hero[edi].movable, al
	.ELSEIF direction == 1	;向下hero[num].pos.y+1
		mov ax, hero[edi].pos.y
		inc ax
		mov hero[edi].pos.y, ax
		INVOKE check_Box, num, 1	;判斷下方有box
		mov hero[edi].movable, al
	.ELSEIF direction == 2	;向後hero[num].pos.x-1
		push ebx
		INVOKE check_Hero, num, 2		;如果後面有人，先移後面的人
		.IF ax == 1
			push esi
			mov esi, ebx
			INVOKE HeroMove, esi, 2	;將後面的人向後移動
			pop esi
		.ENDIF
		pop ebx
		mov ax, hero[edi].pos.x
		dec ax
		mov hero[edi].pos.x, ax
	.ELSE		;向前hero[num].pos.y+1
		mov ax, hero[edi].pos.x
		inc ax
		mov hero[edi].pos.x, ax
	.ENDIF
	pop ax
	ret
HeroMove ENDP

;call check_GameOver
check_GameOver PROC uses ecx edi
;判斷剩下一人
;ax = winner(0~3), if dues ax = 4, if not over ax = 5, 6 for solo loose
	movzx ecx, heroNum
	mov eax, 0
	mov edi, 0
L1:
	add al, hero[edi].isAlive
	.IF hero[edi].isAlive == 1
		mov ah, heroNum	;ah = winner num
		sub ah, cl
		mov ebx, edi
    	.ENDIF
	add edi, TYPE heroinfo
	loop L1
	.IF playerNum == 1
		.IF al == 0
			mov eax, 6
		.ELSE
			mov eax, 5
		.ENDIF
	.ELSEIF al == 0
		mov eax, 4
	.ELSEIF al == 1
		mov al, ah
		mov ah, 0
	.ELSE
		mov eax, 5
	.ENDIF
ret
check_GameOver ENDP

ScrollMap PROC
	push ax
	mov ax, 1
	add game_map.px, ax
	pop ax
	ret
ScrollMap ENDP

Map_initial PROC uses eax
	call Randomize
	.IF playerNum == 1
		mov game_map.map, offset map_solo
	.ELSE
	mov eax, 3
call RandomRange
inc eax	
	mov mapKind, al
	.IF mapKind == 1
		mov game_map.map, offset map_mult_1
	.ELSEIF mapKind == 2
		mov game_map.map, offset map_mult_2
	.ELSEIF mapKind == 3
		mov game_map.map, offset map_mult_3
	.ENDIF
	.ENDIF
	mov game_map.px, 0
	ret
Map_initial ENDP
Hero_initial PROC uses ecx eax ebx esi		;initial hero pos and direction
	mov esi, 0
	mov ecx, 4
L:
	.IF hero[esi].color != 0
		mov hero[esi].isAlive, 1
	.ENDIF
	.IF hero[esi].isAlive == 1			;若此hero有加入
	movzx eax, hero[esi].order
	mov ebx, TYPE init_dir
	mul ebx
	mov bl, init_dir[eax]
	mov hero[esi].direction, bl
	.IF playerNum == 1
		mov hero[esi].direction, 1
	mov hero[esi].pos.x, 7
	mov hero[esi].pos.y, 15
	.ELSEIF mapKind == 2			;地圖2
		.IF hero[esi].order == 0
			mov hero[esi].direction, 0
			mov hero[esi].pos.x, 23
			mov hero[esi].pos.y, 5
		.ELSEIF hero[esi].order == 1
			mov hero[esi].direction, 1
			mov hero[esi].pos.x, 23
			mov hero[esi].pos.y, 5
		.ELSEIF hero[esi].order == 2
			mov hero[esi].direction, 0
			mov hero[esi].pos.x, 23
			mov hero[esi].pos.y, 21
		.ELSEIF hero[esi].order == 3
			mov hero[esi].direction, 1
			mov hero[esi].pos.x, 23
			mov hero[esi].pos.y, 21
		.ENDIF
	.ELSE						;地圖1,3
		.IF hero[esi].order == 0
			mov hero[esi].direction, 0
			mov hero[esi].pos.x, 21
			mov hero[esi].pos.y, 5
		.ELSEIF hero[esi].order == 1
			mov hero[esi].direction, 1
			mov hero[esi].pos.x, 21
			mov hero[esi].pos.y, 5
		.ELSEIF hero[esi].order == 2
			mov hero[esi].direction, 0
			mov hero[esi].pos.x, 21
			mov hero[esi].pos.y, 21
		.ELSEIF hero[esi].order == 3
			mov hero[esi].direction, 1
			mov hero[esi].pos.x, 21
			mov hero[esi].pos.y, 21
		.ENDIF
	.ENDIF
	.ENDIF
	add esi, TYPE hero
	dec ecx
	cmp ecx , 0
	jne L
	ret
Hero_initial ENDP

RandOrder PROC uses eax ebx ecx esi
call Randomize	;generate new random seed
	movzx ecx, heroNum
	mov bl, 0	;order
R1:
	mov eax, ecx
	call RandomRange	;random 0~ecx-1 to eax
	push ecx
	mov ecx, eax
	inc ecx
	mov esi, 0
R2:
	.IF hero[esi].order < 4
		add esi, TYPE hero
		jmp R2
	.ENDIF
	add esi, TYPE hero
	Loop R2
	pop ecx
	sub esi, TYPE hero
	mov hero[esi].order, bl
	inc bl
	Loop R1
	ret
RandOrder ENDP

ReadMove PROC uses ecx edi eax ebx
	inc time
mov eax, 10
	call delay
call ReadKey
	jz NoKey
;--------check key--------
	movzx ecx, heroNum
	mov edi, 0
CheckKey:
	.IF ax == hero[edi].key && hero[edi].isAlive == 1 && hero[edi].movable == 1
		.IF  hero[edi].isStand == 0			;換頭方向
			mov bx, hero[edi].pos.y
			.IF hero[edi].direction == 1
				add bx, 3
			.ELSE
				sub bx, 3
.ENDIF
mov hero[edi].pos.y, bx
		.ENDIF
		.IF hero[edi].direction == 1		;換direction
			mov hero[edi].direction, 0
		.ELSE
			mov hero[edi].direction, 1
		.ENDIF
		mov bl, 0				;movable = false
		mov hero[edi].movable, bl
	.ENDIF
	add edi, TYPE heroinfo
	loop	CheckKey
NoKey:
	ret
ReadMove ENDP

END main

